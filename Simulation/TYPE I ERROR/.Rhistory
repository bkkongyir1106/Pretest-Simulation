t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e4
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e2
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e2
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e1
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e1
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e1
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "LogNormal")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "t")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "t")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "t")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "t")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "Laplace")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "Laplace")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "Laplace")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "Exponential")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "Exponential")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "Exponential")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, "Exponential")
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error <- mean(pvals < alpha)
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
set.seed(123)
dist_sum <- c("Standard Normal", "t") #, "Exponential", "Chi-Square",  "LogNormal")
N     <- 1e3
alpha <- 0.05
n     <- 30
pvals <- numeric(0)
iter  <- 0
type_I_error <- c()
for(j in seq_along(dist_sum)){
dist <- dist_sum[j]
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, dist)
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error[j] <- mean(pvals < alpha)
}
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
# -------------------- Data Splitting --------------------
set.seed(123)
dist_sum <- c("Standard Normal", "t", "Exponential", "Chi-Square", "LogNormal")
N     <- 1e3
alpha <- 0.05
n     <- 30
iter  <- 0
type_I_error <- numeric(length(dist_sum))
for(j in seq_along(dist_sum)){
dist <- dist_sum[j]
pvals <- numeric(0)
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, dist)
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error[j] <- mean(pvals < alpha)
}
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iter, "\n")
# -------------------- Data Splitting --------------------
set.seed(123)
dist_sum <- c("Standard Normal", "t", "Exponential", "Chi-Square", "LogNormal")
N     <- 1e3
alpha <- 0.05
n     <- 30
iteration  <- c()
type_I_error <- numeric(length(dist_sum))
for(j in seq_along(dist_sum)){
dist <- dist_sum[j]
iter  <- 0
pvals <- numeric(0)
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, dist)
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error[j] <- mean(pvals < alpha)
iteration[j] <- iter
}
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iteration, "\n")
# -------------------- Data Splitting --------------------
set.seed(123)
dist_sum <- c("Standard Normal", "t", "Exponential", "Chi-Square", "LogNormal")
N     <- 1e3
alpha <- 0.05
n     <- 20
iteration  <- c()
type_I_error <- numeric(length(dist_sum))
for(j in seq_along(dist_sum)){
dist <- dist_sum[j]
iter  <- 0
pvals <- numeric(0)
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, dist)
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error[j] <- mean(pvals < alpha)
iteration[j] <- iter
}
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iteration, "\n")
set.seed(123)
dist_sum <- c("Standard Normal", "t", "Exponential", "Chi-Square", "LogNormal")
N     <- 1e3
alpha <- 0.05
n     <- 80
iteration  <- c()
type_I_error <- numeric(length(dist_sum))
for(j in seq_along(dist_sum)){
dist <- dist_sum[j]
iter  <- 0
pvals <- numeric(0)
while (length(pvals) < N) {
iter <- iter + 1
x <- generate_data(n, dist)
sw_result <- shapiro.test(x[1:floor(length(x) / 2)])
if (sw_result$p.value > alpha) {
t_result <- t.test(x[(floor(length(x) / 2) + 1):length(x)])
pvals <- c(pvals, t_result$p.value)
}
}
type_I_error[j] <- mean(pvals < alpha)
iteration[j] <- iter
}
# Print Results
cat("Type I error rate:", type_I_error, "\n")
cat("Total iterations performed:", iteration, "\n")
rm(list = ls())
# set directories in local computer
setwd("~/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR")
source("~/Desktop/OSU/Research/Pretest-Simulation/functions/User_defined_functions.R")
rm(list = ls())
# set directories in local computer
setwd("~/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR")
source("~/Desktop/OSU/Research/Pretest-Simulation/functions/User_defined_functions.R")
rm(list = ls())
# set directories in local computer
setwd("~/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR")
source("~/Desktop/OSU/Research/Pretest-Simulation/functions/User_defined_functions.R")
result_array
sim_out
