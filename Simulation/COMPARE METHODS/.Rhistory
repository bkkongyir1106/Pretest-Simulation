col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$LogNormal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$LogNormal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$LogNormal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$LogNormal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "LogNormal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttes", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Chi.Square,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Chi.Square, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Chi.Square, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Chi.Square Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Standard.Normal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Standard.Normal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Standard.Normal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Standard.Normal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Standard.Normal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
#par(mar = c(9, 4, 4, 1), xpd = TRUE)
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.75, 0.75, 0.2, 0.2))  # Adjust as needed
plot(sample_sizes, error_ttest$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Exponential, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Exponential, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Exponential, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Exponential Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$LogNormal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$LogNormal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$LogNormal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$LogNormal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "LogNormal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttes", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Chi.Square,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Chi.Square, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Chi.Square, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Chi.Square Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Standard.Normal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Standard.Normal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Standard.Normal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Standard.Normal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Standard.Normal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
# Two Sample Case Type I error Rates
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Old stuff/COMPARISON OF DOWNSTREAM TEST METHODS/TwoSampleTwoStage_vs_Permutation_TypeI_error.RData")
# One Sample Case Power
## t-test/Mann-Whitney U test vs. permutation test
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Old stuff/COMPUTION TIME/OneSampleTwoStage_vs_Permutation.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/OneSampleCompareTestMethods_power.RData")
rm(list = ls())
#load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Old stuff/COMPARISON OF DOWNSTREAM TEST METHODS/OneSampleCompareTestMethods.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Old stuff/COMPARISON OF DOWNSTREAM TEST METHODS/CompareTestMethods/OneSampleCompareTestMethods_power.RData")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Old stuff/COMPUTION TIME/OneSampleTwoStage_vs_Permutation.RData")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/OneSampleCompareTestMethods_power.RData")
# Power of t-test
Power_ttest <-data.frame(power_t_table)
# Power of Wilcoxon test:
Powerwilcoxtest <-data.frame(power_wilcox_table)
# Power of t_test/wilcoxon test:
Powert_wilcoxtest <-data.frame(power_t_wilcox_table)
# Power of the permutation test:
PowerPermtest <-data.frame(power_perm_table)
# Computation time for t-test
compTime_ttest <-data.frame(time_t_table)
# Computation time for wilcoxon test
CompTimewilcoxtest <-data.frame(time_wilcox_table)
# Computation time for wilcoxon/ttest
compTime_ttest <-data.frame(time_t_wilcox_table)
# Computation time for permutation test (minutes):
CompTimewilcoxtest <-data.frame(time_perm_table)
#par(mar = c(9, 4, 4, 1), xpd = TRUE)
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.75, 0.75, 0.2, 0.2))  # Adjust as needed
plot(sample_sizes, Power_ttest$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Type I error")
lines(sample_sizes, Powerwilcoxtest$Exponential, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, Powert_wilcoxtest$Exponential, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, PowerPermtest$Exponential, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
title(main = "Exponential Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, Power_ttest$LogNormal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Type I error")
lines(sample_sizes, Powerwilcoxtest$LogNormal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, Powert_wilcoxtest$LogNormal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, PowerPermtest$LogNormal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
title(main = "LogNormal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttes", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, Power_ttest$Chi.Square,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Type I error")
lines(sample_sizes, Powerwilcoxtest$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, Powert_wilcoxtest$Chi.Square, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, PowerPermtest$Chi.Square, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
title(main = "Chi.Square Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, Power_ttest$Standard.Normal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Type I error")
lines(sample_sizes, Powerwilcoxtest$Standard.Normal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, Powert_wilcoxtest$Standard.Normal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, PowerPermtest$Standard.Normal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
title(main = "Standard.Normal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Old stuff/COMPARISON OF DOWNSTREAM TEST METHODS/CompareTestMethods/OneampleCompareTestMethods_error.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/OneampleCompareTestMethods_error.RData")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/OneampleCompareTestMethods_error.RData")
# Power of t-test
error_ttest <-data.frame(error_t_table)
# Power of Wilcoxon test:
error_wilcoxtest <-data.frame(error_wilcox_table)
# Power of t_test/wilcoxon test:
error_t_wilcoxtest <-data.frame(error_t_wilcox_table)
# Power of the permutation test:
error_Permtest <-data.frame(error_perm_table)
# Computation time for t-test
compTime_ttest <-data.frame(time_t_table)
# Computation time for wilcoxon test
CompTimewilcoxtest <-data.frame(time_wilcox_table)
# Computation time for wilcoxon/ttest
compTime_t_wilcoxtest <-data.frame(time_t_wilcox_table)
# Computation time for permutation test (minutes):
CompTimepermtest <-data.frame(time_perm_table)
#par(mar = c(9, 4, 4, 1), xpd = TRUE)
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.75, 0.75, 0.2, 0.2))  # Adjust as needed
plot(sample_sizes, error_ttest$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Exponential, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Exponential, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Exponential, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Exponential Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$LogNormal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$LogNormal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$LogNormal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$LogNormal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "LogNormal Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttes", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Chi.Square,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Chi.Square, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Chi.Square, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Chi.Square Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Standard.Normal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Standard.Normal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Standard.Normal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Standard.Normal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Standard.Normal Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/TwoSampleAreaUnderCurve_power.RData")
area_perm
area_t
area_t_wilcox
area_wilcox
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/TwoSampleCompareTestMethods_power.RData")
# Power of t-test
Power_ttest <-data.frame(power_t_table)
# Power of Wilcoxon test:
Powerwilcoxtest <-data.frame(power_wilcox_table)
# Power of t_test/wilcoxon test:
Powert_wilcoxtest <-data.frame(power_t_wilcox_table)
# Power of the permutation test:
PowerPermtest <-data.frame(power_perm_table)
# Computation time for t-test
compTime_ttest <-data.frame(time_t_table)
# Computation time for wilcoxon test
CompTimewilcoxtest <-data.frame(time_wilcox_table)
# Computation time for wilcoxon/ttest
compTime_t_wilcoxtest <-data.frame(time_t_wilcox_table)
# Computation time for permutation test (minutes):
CompTimepermtest <-data.frame(time_perm_table)
power_diff_t
power_t_table
power_wilcox_table
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/TwoSampleAreaUnderCurve_power.RData")
power_t_table
N
P
nvec
sample_sizes
d
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/TwoSampleAreaUnderCurve_Skewness_power.RData")
power_t_table
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/TwoSampleAreaUnderCurve_error.RData")
error_t_table
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/TwoSampleAreaUnderCurve_power.RData")
power_t_table
power_t_wilcox_table
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/TwoSampleAreaUnderCurve_Skewness_power.RData")
power_t_wilcox_table
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/TwoSampleAreaUnderCurve_error.RData")
rm(list = ls())
# load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/TwoSampleCompareTestMethods_error.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/TwoSampleAreaUnderCurve_error.RData")
# Power of t-test
error_ttest <-data.frame(error_t_table)
# Power of Wilcoxon test:
error_wilcoxtest <-data.frame(error_wilcox_table)
# Power of t_test/wilcoxon test:
error_t_wilcoxtest <-data.frame(error_t_wilcox_table)
# Power of the permutation test:
error_Permtest <-data.frame(error_perm_table)
# Computation time for t-test
compTime_ttest <-data.frame(time_t_table)
# Computation time for wilcoxon test
CompTimewilcoxtest <-data.frame(time_wilcox_table)
# Computation time for wilcoxon/ttest
compTime_t_wilcoxtest <-data.frame(time_t_wilcox_table)
# Computation time for permutation test (minutes):
CompTimepermtest <-data.frame(time_perm_table)
#par(mar = c(9, 4, 4, 1), xpd = TRUE)
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.75, 0.75, 0.2, 0.2))  # Adjust as needed
plot(sample_sizes, error_ttest$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Exponential, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Exponential, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Exponential, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Exponential Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$LogNormal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$LogNormal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$LogNormal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$LogNormal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "LogNormal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttes", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Chi.Square,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Chi.Square, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Chi.Square, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Chi.Square Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Standard.Normal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Standard.Normal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Standard.Normal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Standard.Normal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Standard.Normal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
#par(mar = c(9, 4, 4, 1), xpd = TRUE)
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.75, 0.75, 0.2, 0.2))  # Adjust as needed
plot(sample_sizes, error_ttest$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Exponential, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Exponential, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Exponential, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Exponential Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$LogNormal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$LogNormal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$LogNormal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$LogNormal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "LogNormal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttes", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Chi.Square,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Chi.Square, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Chi.Square, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Chi.Square Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Standard.Normal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Standard.Normal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Standard.Normal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Standard.Normal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Standard.Normal Samples")
legend("bottomright", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/OneSampleAreaUnderCurve_error.RData")
rm(list = ls())
# load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/OneampleCompareTestMethods_error.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS/Area Under Curve/OneSampleAreaUnderCurve_error.RData")
# Power of t-test
error_ttest <-data.frame(error_t_table)
# Power of Wilcoxon test:
error_wilcoxtest <-data.frame(error_wilcox_table)
# Power of t_test/wilcoxon test:
error_t_wilcoxtest <-data.frame(error_t_wilcox_table)
# Power of the permutation test:
error_Permtest <-data.frame(error_perm_table)
# Computation time for t-test
compTime_ttest <-data.frame(time_t_table)
# Computation time for wilcoxon test
CompTimewilcoxtest <-data.frame(time_wilcox_table)
# Computation time for wilcoxon/ttest
compTime_t_wilcoxtest <-data.frame(time_t_wilcox_table)
# Computation time for permutation test (minutes):
CompTimepermtest <-data.frame(time_perm_table)
#par(mar = c(9, 4, 4, 1), xpd = TRUE)
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.75, 0.75, 0.2, 0.2))  # Adjust as needed
plot(sample_sizes, error_ttest$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Exponential, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Exponential, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Exponential, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Exponential Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$LogNormal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$LogNormal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$LogNormal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$LogNormal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "LogNormal Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttes", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Chi.Square,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Chi.Square, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Chi.Square, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Chi.Square Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
plot(sample_sizes, error_ttest$Standard.Normal, type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(sample_sizes), xlab = "Sample Size", ylab = "Power")
lines(sample_sizes, error_wilcoxtest$Standard.Normal, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(sample_sizes, error_t_wilcoxtest$Standard.Normal, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(sample_sizes, error_Permtest$Standard.Normal, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
abline(h = 0.05)
title(main = "Standard.Normal Samples")
legend("topleft", legend=c("t","Wilcoxon", "Wilcoxon/ttest", "Permutation"), lwd = 3,
col=c("red", "blue", "green",  "orange"), lty = 1:4, pch =1:4, cex = 0.8, title = "Test Method")
area_perm
area_t
area_t_wilcox
area_wilcox
setwd("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS")
setwd("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/COMBINE RESULTS_20240719/COMPARE METHODS")
# set directories in local computer
source("~/Desktop/OSU/Research/Pretest-Simulation/functions/User_defined_functions.R")
source("~/Desktop/OSU/Research/Pretest-Simulation/functions/utility.R")
# To run on cluster
# setwd("/home/kongyir/spring2024/power")
# source("/home/kongyir/spring2024/User_defined_functions.R")
# source("/home/kongyir/spring2024/utility.R")
# loads the package
#library("writexl")
#library(openxlsx)
#####################.Two-Stage Procedure vs. Permutation test########################
set.seed(12345)
N <- 1e3 # Number of iterations
sample_sizes <- c(5, 10, 15, 20, 25, 30, 50)
B <- 1e4 # Number of permutations
alpha <- 0.05  # Significance level
d <- 0.5 # effect size
distributions <- c("Standard Normal", "Exponential", "LogNormal") #, "Pareto")
# Function to calculate the test statistic (difference of means)
calculate_test_statistic <- function(x, y) {
return((mean(x) - mean(y))/sqrt(var(x)/length(x) + var(y)/length(y)))
}
# Function to compute the area under the curve using the trapezoidal rule
compute_area <- function(x, y) {
(sum(diff(x) * (head(y, -1) + tail(y, -1)) / 2))/(max(sample_sizes) - min(sample_sizes))
}
# Initialize tables to store results
{
power_t_table <- power_wilcox_table <- power_t_wilcox_table <- power_perm_table  <- data.frame(matrix(NA, nrow = length(sample_sizes), ncol = length(distributions)))
time_t_table <- time_wilcox_table<- time_t_wilcox_table <- time_perm_table <- data.frame(matrix(NA, nrow = length(sample_sizes), ncol = length(distributions)))
# Setting column names for the tables
colnames(power_t_table) <- colnames(power_wilcox_table) <-colnames(time_t_table) <-colnames(time_wilcox_table) <- distributions
colnames(power_t_wilcox_table) <- colnames(power_perm_table) <-colnames(time_t_wilcox_table) <-colnames(time_perm_table) <- distributions
rownames(power_t_table) <- rownames(power_wilcox_table) <- rownames(time_t_table) <- rownames(time_wilcox_table) <- sample_sizes
rownames(power_t_wilcox_table) <- rownames(power_perm_table) <- rownames(time_t_wilcox_table) <- rownames(time_perm_table) <- sample_sizes
}
total_steps <- length(distributions) * length(sample_sizes)
pb <- txtProgressBar(min = 0, max = total_steps, style = 3)
progress <- 0
for (dist in distributions) {
# # Initialize empty vectors to store power values
power_t <- power_wilcox <- power_t_wilcox <- power_perm <-  numeric(length(sample_sizes))
avg_time_t <-avg_time_wilcox <- avg_time_t_wilcox <-avg_time_perm <-numeric(length(sample_sizes))
for (s in 1:length(sample_sizes)) {
n <- sample_sizes[s]
# Initialize empty vectors to store p-values
pval_t <- pval_wilcox <- pvals <- pval_perm<- numeric(N)
time_t <- time_wilcox <- time_t_wilcox <- time_perm <- numeric(N)
for (i in 1:N) {
x <- generate_data(n, dist)
y <- generate_data(n, dist)
# perform t test
time_t[i] <- system.time(
{
pval_t[i] <- t.test(x, y + d)$p.value
})["elapsed"]
# Wilcoxon test
time_wilcox[i] <- system.time(
{
pval_wilcox[i] <- wilcox.test(x, y + d)$p.value
}
)["elapsed"]
# Perform t-test/Wilcoxon based on skewness
time_t_wilcox[i] <- system.time({
if (abs(skewness(x)) < alpha & abs(skewness(y)) < alpha) {
pvals[i] <- t.test(x, y + d)$p.value
} else {
pvals[i] <- wilcox.test(x, y + d)$p.value
}
})["elapsed"]
# Perform permutation test
data <- c(x, y + d)
observe_stat <- calculate_test_statistic(x, y + d)
time_perm[i] <- system.time({
permuted_stat <- numeric(B)
for (j in 1:B) {
sample_data <- sample(data)
sample_x <- sample_data[1:length(x)]
sample_y <- sample_data[(length(x) + 1):(length(x) + length(y))]
permuted_stat[j] <- calculate_test_statistic(sample_x, sample_y)
}
pval_perm[i] <- mean(abs(permuted_stat) >= abs(observe_stat))
})["elapsed"]
}
# Update progress bar
progress <- progress + 1
setTxtProgressBar(pb, progress)
# Calculate power
power_t_wilcox[s] <- mean(pvals < alpha)
power_perm[s] <- mean(pval_perm < alpha)
power_t[s] <- mean(pval_t < alpha)
power_wilcox[s] <- mean(pval_wilcox < alpha)
# Calculate average computation time for each procedure
avg_time_t_wilcox[s] <- mean(time_t_wilcox)
avg_time_perm[s] <- mean(time_perm)
avg_time_t[s] <- mean(time_t)
avg_time_wilcox[s] <- mean(time_wilcox)
}
# Store results in tables
power_t_table[, dist] <- power_t
power_wilcox_table[, dist] <- power_wilcox
power_t_wilcox_table[, dist] <- power_t_wilcox
power_perm_table[, dist] <- power_perm
time_t_table[, dist] <- avg_time_t
time_wilcox_table[, dist] <- avg_time_wilcox
time_t_wilcox_table[, dist] <- avg_time_t_wilcox
time_perm_table[, dist] <- avg_time_perm
}
