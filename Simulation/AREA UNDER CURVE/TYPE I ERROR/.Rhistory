system.time({
sim_out <- foreach(n = nvec, .packages = c("LaplacesDemon", "VGAM"), .options.snow = opts) %:%
foreach(dist = dist_sum) %dopar% {
set.seed(12345) # Set seed for reproducibility
pval_t <- pval_bootstrap <- pvals <- numeric(N)
time_t <- time_bootstrap <- time_t_bootstrap <- numeric(N)
for (i in 1:N) {
x <- generate_data(n, dist) # Remove `+5` to generate data under the null hypothesis
# Perform t-test
time_t[i] <- system.time({
pval_t[i] <- t.test(x)$p.value
})["elapsed"]
# Perform bootstrap test (passing `n` now)
time_bootstrap[i] <- system.time({
pval_bootstrap[i] <- perform_bootstrap_test(x, n, B)
})["elapsed"]
# Perform t-test/bootstrap test based on Shapiro-Wilk normality test
time_t_bootstrap[i] <- system.time({
if (shapiro.test(x)$p.value > alpha) {
pvals[i] <- t.test(x)$p.value
} else {
pvals[i] <- perform_bootstrap_test(x, n, B)
}
})["elapsed"]
}
# Calculate Type I error rates
error_t <- mean(pval_t < alpha)
error_bootstrap <- mean(pval_bootstrap < alpha)
error_t_bootstrap <- mean(pvals < alpha)
# Calculate average computation times
avg_time_t <- mean(time_t)
avg_time_bootstrap <- mean(time_bootstrap)
avg_time_t_bootstrap <- mean(time_t_bootstrap)
list(
error_t = error_t,
error_bootstrap = error_bootstrap,
error_t_bootstrap = error_t_bootstrap,
time_t = avg_time_t,
time_bootstrap = avg_time_bootstrap,
time_t_bootstrap = avg_time_t_bootstrap
)
}
close_cluster(my_cl)
})
## Output
errorvec <- numeric(length(nvec) * length(dist_sum))
TypeI.errorRate_t <- TypeI.errorRate_bootstrap <- TypeI.errorRate_t_bootstrap <- array(errorvec, dim = c(length(nvec), length(dist_sum)), dimnames = list(nvec, dist_sum))
avg_time_t <- avg_time_bootstrap <- avg_time_t_bootstrap <- array(errorvec, dim = c(length(nvec), length(dist_sum)), dimnames = list(nvec, dist_sum))
for (t in seq_along(nvec)) {
for (j in seq_along(dist_sum)) {
# Probability of Type I error rates
TypeI.errorRate_t[t, j] <- (sim_out[[t]][[j]]$error_t)
TypeI.errorRate_bootstrap[t, j] <- (sim_out[[t]][[j]]$error_bootstrap)
TypeI.errorRate_t_bootstrap[t, j] <- (sim_out[[t]][[j]]$error_t_bootstrap)
# Computation Time
avg_time_t[t, j] <- (sim_out[[t]][[j]]$time_t)
avg_time_bootstrap[t, j] <- (sim_out[[t]][[j]]$time_bootstrap)
avg_time_t_bootstrap[t, j] <- (sim_out[[t]][[j]]$time_t_bootstrap)
}
}
# Calculate areas under the Type I error rate curves
area_t <- apply(TypeI.errorRate_t, 2, compute_area, x = nvec)
area_bootstrap <- apply(TypeI.errorRate_bootstrap, 2, compute_area, x = nvec)
area_t_bootstrap <- apply(TypeI.errorRate_t_bootstrap, 2, compute_area, x = nvec)
# Print results
TypeI.errorRate_t
TypeI.errorRate_bootstrap
TypeI.errorRate_t_bootstrap
# Computation time
avg_time_t
avg_time_bootstrap
avg_time_t_bootstrap
# Area under Type I error curve
area_t
area_bootstrap
area_t_bootstrap
# Save Data
#save.image(paste0("OneSampleTypeI.errorRateAUC",".RData"))
# # Write data to excel
# library(writexl)
# error_dataframe <- data.frame(TypeI.errorRate_t, TypeI.errorRate_bootstrap, TypeI.errorRate_t_bootstrap)
# write_xlsx(error_dataframe, path = "OneSampleTypeI_error_rates.xlsx")
# setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Research.05.10.2024/Power")
# # set directories in local computer
# source("~/Desktop/OSU/Research/Pretest-Simulation/functions/User_defined_functions.R")
# source("~/Desktop/OSU/Research/Pretest-Simulation/functions/utility.R")
# To run on cluster
# setwd("/home/kongyir/spring2024/error")
source("~/Desktop/OSU/Research/Pretest-Simulation/functions/User_defined_functions.R")
source("~/Desktop/OSU/Research/Pretest-Simulation/functions/utility.R")
#####################.Two-Stage Procedure vs. Permutation test########################
set.seed(12345)
N <- 1e1
sample_sizes <- c(5, 10, 15, 20) #, 25, 30, 50)
B <- 1e2
alpha <- 0.05
# distributions <- c("Standard Normal", "Exponential", "Chi-Square", "LogNormal") #, "Pareto")
distributions <- c("Standard Normal", "Exponential") #, "Chi-Square", "LogNormal")
# Function to calculate test statistic
calculate_test_statistic <- function(x) {
return((mean(x)*sqrt(length(x))) / sqrt(var(x)))
}
# Function to perform the bootstrap test
perform_bootstrap_test <- function(x,n, B) {
# Calculate the observed test statistic
observe_stat <- calculate_test_statistic(x)
# Initialize vector for bootstrap test statistics
bootstrap_stat <- numeric(B)
# Generate the bootstrap replicates
for (j in 1:B) {
sample_data <- sample(x, size = n, replace = TRUE)
bootstrap_stat[j] <- calculate_test_statistic(sample_data)
}
# Calculate the p-value
pval_bootstrap <- mean(abs(bootstrap_stat) >= abs(observe_stat))
return(pval_bootstrap)
}
# Initialize tables to store results
Error_t_wilcox_table <- Error_perm_table <- time_t_wilcox_table <- time_perm_table <- data.frame(matrix(NA,
nrow = length(sample_sizes), ncol = length(distributions)))
# Setting column names for the tables
colnames(Error_t_wilcox_table) <- colnames(Error_perm_table) <-colnames(time_t_wilcox_table) <-colnames(time_perm_table) <- distributions
rownames(Error_t_wilcox_table) <- rownames(Error_perm_table) <- rownames(time_t_wilcox_table) <- rownames(time_perm_table) <- sample_sizes
total_steps <- length(distributions) * length(sample_sizes) * N
pb <- txtProgressBar(min = 0, max = total_steps, style = 3)
progress <- 0
for (dist in distributions) {
Error_t_wilcox_list <- Error_perm_list <- avg_time_t_wilcox_list <-avg_time_perm_list <-  numeric(length(sample_sizes))
for (s in 1:length(sample_sizes)) {
n <- sample_sizes[s]
# Initialize empty vectors to store values
pvals <- pval_bootstrap <- time_bootstrap <- time_t_bootstrap <- numeric(N)
for (i in 1:N) {
x <- generate_data(n, dist)
#  # Perform bootstrap test
time_bootstrap[i] <- system.time({
pval_bootstrap[i] <- perform_bootstrap_test(x,n, B)
})["elapsed"]
# Perform t-test/bootstrap test based on Shapiro-Wilk normality test
time_t_bootstrap[i] <- system.time({
if (shapiro.test(x)$p.value > alpha) {
pvals[i] <- t.test(x)$p.value
} else {
pvals[i] <- perform_bootstrap_test(x,n, B)
}
})["elapsed"]
}
# Update progress bar
progress <- progress + 1
setTxtProgressBar(pb, progress)
# Calculate power for the t-test/Wilcoxon test
Error_t_wilcox_list[s] <- mean(pval_bootstrap < alpha)
# Calculate power for the permutation test
Error_perm_list[s] <- mean(pvals < alpha)
# Calculate average computation time for each procedure
avg_time_t_wilcox_list[s] <- mean(time_t_bootstrap)
avg_time_perm_list[s] <- mean(time_bootstrap)
}
# Store results in tables
Error_t_wilcox_table[, dist] <- Error_t_wilcox_list
Error_perm_table[, dist] <- Error_perm_list
time_t_wilcox_table[, dist] <- avg_time_t_wilcox_list
time_perm_table[, dist] <- avg_time_perm_list
}
# Print power tables
cat("Power for t-test/Wilcoxon test for each distribution and sample size:\n")
print(Error_t_wilcox_table)
cat("\nPower for permutation test for each distribution and sample size:\n")
print(Error_perm_table)
# Print computation time tables
cat("\nComputation time for t-test/Wilcoxon test for each distribution and sample size:\n")
print(time_t_wilcox_table)
cat("\nComputation time for permutation test for each distribution and sample size:\n")
print(time_perm_table)
close(pb)
#save(sample_sizes, Error_t_wilcox_table, Error_perm_table, time_t_wilcox_table, time_perm_table, file = "OneSampleTwoStage_vs_Permutation_TypeI_error.RData" )
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleTypeI.errorRate.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleTypeI.errorRate.RData")
knitr::opts_chunk$set(echo = TRUE, fig.height = 8, fig.width = 10)
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleTypeI.errorRate.RData")
error <- data.frame(TypeI.errorRate)
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleConditionalTypeI.errorRate.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleTwoStageTypeI.errorRate.RData")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleTypeI.errorRate.RData")
error <- data.frame(TypeI.errorRate)
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleConditionalTypeI.errorRate.RData")
errorConditional <- data.frame(TypeI.errorRate)
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/OneSampleTwoStageTypeI.errorRate.RData")
errorTwoStage <- data.frame(TypeI.errorRate)
par(mfrow = c(3,2))
# Adjust margins to reduce space between plots
par(mai = c(0.95, 0.85, 0.3, 0.3))  # Adjust as needed
par(cex.lab = 1.5, font.lab = 2, cex.axis = 1.2, cex.main = 1.5, cex.sub = 1.2)  # Larger and bold labels, axis text, and title
# Type I error
plot(nvec, error$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, error$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.75), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, error$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Conditional Type i error
plot(nvec, errorConditional$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorConditional rates")
lines(nvec, errorConditional$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorConditional$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorConditional$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorConditional$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Condition Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorConditional$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.75), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorConditional rates")
lines(nvec, errorConditional$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorConditional$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorConditional$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorConditional$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorConditional$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Condition Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Two-Stage
plot(nvec, errorTwoStage$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorTwoStage$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.75), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorTwoStage$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
par(mfrow = c(3,2))
# Adjust margins to reduce space between plots
par(mai = c(0.95, 0.85, 0.3, 0.3))  # Adjust as needed
par(cex.lab = 1.5, font.lab = 2, cex.axis = 1.2, cex.main = 1.5, cex.sub = 1.2)  # Larger and bold labels, axis text, and title
# Type I error
plot(nvec, error$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, error$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.5), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, error$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Conditional Type i error
plot(nvec, errorConditional$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorConditional rates")
lines(nvec, errorConditional$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorConditional$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorConditional$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorConditional$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Condition Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorConditional$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.75), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorConditional rates")
lines(nvec, errorConditional$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorConditional$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorConditional$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorConditional$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorConditional$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Condition Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Two-Stage
plot(nvec, errorTwoStage$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorTwoStage$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.75), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorTwoStage$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
par(mfrow = c(3,2))
# Adjust margins to reduce space between plots
par(mai = c(0.95, 0.85, 0.3, 0.3))  # Adjust as needed
par(cex.lab = 1.5, font.lab = 2, cex.axis = 1.2, cex.main = 1.5, cex.sub = 1.2)  # Larger and bold labels, axis text, and title
# Type I error
plot(nvec, error$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, error$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.3), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, error$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Conditional Type i error
plot(nvec, errorConditional$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorConditional rates")
lines(nvec, errorConditional$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorConditional$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorConditional$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorConditional$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Condition Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorConditional$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.75), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorConditional rates")
lines(nvec, errorConditional$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorConditional$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorConditional$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorConditional$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorConditional$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Condition Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Two-Stage
plot(nvec, errorTwoStage$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorTwoStage$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.75), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorTwoStage$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR RATES/Selective Inference Type I error/TwoSampleTypeI.errorRate.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/TwoSampleTypeI.errorRate.RData")
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/TwoSampleConditionalTypeI.errorRate.RData")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/TwoSampleTypeI.errorRate.RData")
error <- data.frame(TypeI.errorRate)
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/TwoSampleConditionalTypeI.errorRate.RData")
errorTwoStage <- data.frame(TypeI.errorRate)
errorTwoStage
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/TwoSampleTwoStageTypeI.errorRate.RData")
rm(list = ls())
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/TwoSampleTypeI.errorRate.RData")
error <- data.frame(TypeI.errorRate)
load("/Users/benedictkongyir/Desktop/OSU/Research/Pretest-Simulation/Simulation/TYPE I ERROR/TwoSampleTwoStageTypeI.errorRate.RData")
errorTwoStage <- data.frame(TypeI.errorRate)
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.95, 0.85, 0.3, 0.3))  # Adjust as needed
par(cex.lab = 1.5, font.lab = 2, cex.axis = 1.2, cex.main = 1.5, cex.sub = 1.2)  # Larger and bold labels, axis text, and title
# Type I error
plot(nvec, error$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.2), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, error$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.2), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, error$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Two-Stage
plot(nvec, errorTwoStage$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.2), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorTwoStage$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.2), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorTwoStage$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
par(mfrow = c(2,2))
# Adjust margins to reduce space between plots
par(mai = c(0.95, 0.85, 0.3, 0.3))  # Adjust as needed
par(cex.lab = 1.5, font.lab = 2, cex.axis = 1.2, cex.main = 1.5, cex.sub = 1.2)  # Larger and bold labels, axis text, and title
# Type I error
plot(nvec, error$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, error$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I error rates")
lines(nvec, error$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, error$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, error$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, error$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, error$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Unconditional Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
# Two-Stage
plot(nvec, errorTwoStage$Standard.Normal,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Uniform, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$t, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Laplace, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$Contaminated, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topright", legend=c("Normal", "Uniform", "t", "Laplace", "Contaminated"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey"), lty = 1:4, text.font = 2, pch =1:4, cex = 1.2 ,title = "Type I error Rates")
plot(nvec, errorTwoStage$Exponential,  type = "o", lty = 1, pch = 1, col = "red", lwd = 3,
ylim = c(0, 0.1), xlim = range(nvec), xlab = "Sample Size", ylab = "Type I errorTwoStage rates")
lines(nvec, errorTwoStage$Chi.Square, type = "o", lty = 2, pch = 2, col = "blue", lwd = 3)
lines(nvec, errorTwoStage$Gamma, type = "o", lty = 3, pch = 3, col = "green", lwd = 3)
lines(nvec, errorTwoStage$Weibull, type = "o", lty = 4, pch = 4, col = "orange", lwd = 3)
lines(nvec, errorTwoStage$LogNormal, type = "o", lty = 5, pch = 5, col = "grey", lwd = 3)
lines(nvec, errorTwoStage$Pareto, type = "o", lty = 5, pch = 5, col = "pink", lwd = 3)
abline(h = 0.05)
title(main = "Two -Stage Type I error")
legend("topleft", legend=c("Exponential","Chi-squared", "Gamma", "Weibul", "Lognormal", "Pareto"), lwd = 3,
col=c("red", "blue", "green",  "orange", "grey", "pink"), lty = 1:5, text.font = 2, pch =1:5, cex = 1.2, title = "Type I error Rates")
