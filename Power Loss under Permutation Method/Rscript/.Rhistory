pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
x <- rexp(n, 1)
z <- numeric(nsim)
for (i in 1:nsim) {
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
z
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
rm(list = ls())
N = 100; alpha = 0.05; nsim = 100
sample_size = c(10, 20, 30,40)
powr1 <- powr2 <- numeric(length(sample_size))
for(k in 1 : length(sample_size)){
n = sample_size[k]
print(n)
pval1 <- pval2 <- numeric(N)
for(j in 1 : N){
#x <- runif(n, 0, 1) - 0.5
for (i in 1:nsim) {
x <- rexp(n, 1)
z <- numeric(nsim)
mn <- sample(c(-1, 1), n, replace = TRUE)
z[i] <- mean(mn * abs(x))
}
pval1[j] <-(sum(abs(z) >= abs(mean(x))) + sum(z <= -abs(mean(x))))/nsim
pval2[j] <- mean(abs(z) >= abs(mean(x)))
}
powr1[k] <- mean(pval1 < alpha)
powr2[k] <- mean(pval2 < alpha)
}
powr1
powr2
