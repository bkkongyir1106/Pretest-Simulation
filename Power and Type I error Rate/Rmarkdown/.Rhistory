knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
num.sim <- 1e5
n <- 10
df <- 3
deltavec <- c(0.5, 1 ,1.5)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
num.sim <- 1e5
n <- 10
df <- 3
deltavec <- c(0.5, 1 ,1.5)
tstat_norm <- tstat_chi <- tstat_exp <- tstat_unif <- tstat_t <- tstat_gamma <- tstat_weibull <- tstat_log <- matrix(NA, nrow = num.sim, ncol = length(deltavec))
set.seed(123)
for(i in 1:num.sim){
for (k in 1:length(deltavec)){
chisq_distn <- (rchisq(n, df) - df)/sqrt(2*df) + deltavec[k]
exp_distn <- (rexp(n) - 1) + deltavec[k]
unif_distn <- (runif(n, 0, 1) - 0.5)/sqrt(1/12) + deltavec[k]
t_distn <- (rt(n, df))/sqrt(df/(df-2)) + deltavec[k]
norm_dist<- rnorm(n) + deltavec[k]
gamma_dist <- ((rgamma(n, shape = 3, rate = 0.1) - 30)/sqrt(300)) + deltavec[k]
log_dist <- (rlnorm(n, meanlog = 0, sdlog = 1)- exp(0+1/2))/sqrt(sqrt((exp(1)-1)*exp(2*0 + 1))) + deltavec[k]
tstat_chi[i, k] <- sqrt(n)*mean(chisq_distn)/sd(chisq_distn)
tstat_norm[i, k] <- sqrt(n)*mean(norm_dist)/sd(norm_dist)
tstat_exp[i, k] <- sqrt(n)*mean(exp_distn)/sd(exp_distn)
tstat_t[i, k] <- sqrt(n)*mean(t_distn)/sd(t_distn)
tstat_unif[i, k] <- sqrt(n)*mean(unif_distn)/sd(unif_distn)
tstat_gamma[i, k] <- sqrt(n)*mean(gamma_dist)/sd(gamma_dist)
tstat_log[i, k] <- sqrt(n)*mean(log_dist)/sd(log_dist)
}
}
save.image(paste0("test statistics plot under H1",".RData"))
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
title(main = "X_3")
for (k in 1:3){
lines(density(tstat_chi[, k]), col = "red", lty = k)
lines(density(tstat_norm[, k]), col = "blue", lty = k)
abline(v=qt(0.025, df = df + k), col = "blue")
abline(v=qt(0.975, df = df + k), col = "blue")
}
legend('topright', legend = c("chi-squared", "normal"), col=c("red", "blue") , lty =1 ,cex = 0.5)
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
title(main = "Chi-Squared with 3 df")
for (k in 1:3){
lines(density(tstat_chi[, k]), col = "red", lty = k)
lines(density(tstat_norm[, k]), col = "blue", lty = k)
abline(v=qt(0.025, df = df + k), col = "blue")
abline(v=qt(0.975, df = df + k), col = "blue")
}
legend('topright', legend = c("chi-squared", "normal"), col=c("red", "blue") , lty =1 ,cex = 0.5)
plot(density(tstat_chi[,1]), col = "red", lty = "l")
plot(density(tstat_chi[,1]), col = "red", lty = 1)
lines(density(tstat_norm[,1]), col = "blue", lty = 1)
plot(density(tstat_chi[,1]), col = "red", lty = 1)
lines(density(tstat_norm[,1]), col = "blue", lty = 1, add = T)
plot(density(tstat_chi[,1]), col = "red", lty = 1)
lines(density(tstat_norm[,1]), col = "blue", lty = 1, add = T)
abline(v=qt(0.025, df = df), col = "blue")
abline(v=qt(0.975, df = df), col = "blue")
plot(density(tstat_chi[,1]), col = "red", lty = 1)
lines(density(tstat_norm[,1]), col = "blue", lty = 1)
abline(v=qt(0.025, df = df), col = "blue")
abline(v=qt(0.975, df = df), col = "blue")
plot(density(tstat_chi[,1]), col = "red", lty = 1)
lines(density(tstat_norm[,1]), col = "blue", lty = 1)
abline(v=qchisq(0.025, df = df), col = "blue")
abline(v=qchisq(0.975, df = df), col = "blue")
plot(density(tstat_chi[,1]), col = "red", lty = 1)
lines(density(tstat_norm[,1]), col = "blue", lty = 1)
abline(v=qnorm(0.025, df = df), col = "blue")
plot(density(tstat_chi[,1]), col = "red", lty = 1)
lines(density(tstat_norm[,1]), col = "blue", lty = 1)
abline(v=qnorm(0.025), col = "blue")
abline(v=qnorm(0.975), col = "blue")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
setwd("D:/Research_Fall2023/Pretest-Simulation/Power and Type I error Rate/Rmarkdown")
set.seed(1)
N <- 1e5
alpha <- 0.05
d <- 0.5
n <- 10
norm_statistic <- log_statistic <-t_statistic <- u_statistic<-e_statistic <- k_statistic <-g_statistic <- w_statistic <- NULL
for(j in 1 : N){
# ===============================================================================================
# n1 ~N(0,1),  E(X) = 0  and VAR(X) = 1
# ===============================================================================================
n1 <- rnorm(n, mean = 0, sd = 1)
norm_statistic[j] <- t.test(n1)$statistic
# ===============================================================================================
# e ~exp(theta),  E(X) = theta and VAR(X) = theta^2
# ===============================================================================================
e1 <- rexp(n, rate = 1)
e_statistic[j] <- t.test(e1 - 1)$statistic
# ===============================================================================================
# u1 ~U(a, b),  E(X) = (a + b)/2 and VAR(X) = [(b-a)^2]/12
# ===============================================================================================
u1 <- runif(n, min = 0, max = 1)
u_statistic[j] <- t.test((u1-0.5)/sqrt(1/12))$statistic
# ===============================================================================================
# t1 ~t_v,  E(X) = 0 for v >1 and VAR(X) = v/(v-2)
# ===============================================================================================
t1 <-rt(n, df = 3)
t_statistic[j] <- t.test((t1)/sqrt(3))$statistic
# ===============================================================================================
# k1 ~X_k,  E(X) = k and VAR(X) = 2k
# ===============================================================================================
k1 <-rchisq(n, df = 7)
k_statistic[j] <- t.test((k1 - 7)/sqrt(14))$statistic
# ===============================================================================================
# g1 ~gamma(alpha, beta), where beta = 1/theta so E(X) = shape/rate and VAR(X) = shape/(rate)^2
# ===============================================================================================
g1 <- rgamma(n, shape = 3, rate = 0.1)
g_statistic[j] <- t.test((g1-30)/sqrt(300))$statistic
# ===============================================================================================
# w1 ~Weibull(shape, scale)  E(X) = scale Gamma(1 + 1/shape) and
# VAR(X) = scale^2[Gamma(1 + 2/shape) - (Gamma(1 + 1/shape))^2]
# ===============================================================================================
w1 <- rweibull(n, shape = 1, scale = 2)
u <- (w1-2*gamma(2))/sqrt(4*(gamma(3) - gamma(2)))
w_statistic[j] <- t.test(u)$statistic
# ===================================================================================================
# l1 ~lognormal(mu, sigma^2)  E(X) = exp(mu + sigma^2/2) VAR(X) = [exp(sigma^2)-1]exp(2mu + sigma^2)
# ===================================================================================================
l1 <- rlnorm(n, meanlog = 0, sdlog = 1)
z1 <- (l1- exp(0+1/2))/sqrt(sqrt((exp(1)-1)*exp(2*0 + 1)))
log_statistic[j] <- t.test(z1)$statistic
}
df = 2*n - 2
z <- seq(from = -3, to = 3, by = 0.01)
#par(mar = c(5, 4, 4, 8), xpd = TRUE)
# normal Distribution
#hist(norm_statistic, prob = T, ylim = c(0, 0.4), xlim = c(-8, 8), main = " ", sub = " ")
plot(z, dt(z, df = n-1), col = "red", type = "l", xlab = " ",  ylab = "Density",  lwd = 2, main = " ", sub = " ")
title(main = "Histogram of t test Statistics", sub = "normal Dist")
lines(density(norm_statistic), lwd = 2)
abline(v=qt(0.025, df = df), col = "blue")
abline(v=qt(0.975, df = df), col = "blue")
legend("topright",  legend=c("t density", "true density"),col=c( "red","black"), lty =1 ,cex = 0.5)
df = 2*n - 2
z <- seq(from = -3, to = 3, by = 0.01)
#par(mar = c(5, 4, 4, 8), xpd = TRUE)
# normal Distribution
#hist(norm_statistic, prob = T, ylim = c(0, 0.4), xlim = c(-8, 8), main = " ", sub = " ")
plot(z, dt(z, df = n-1), col = "red", type = "l", xlab = " ",  ylab = "Density",  lwd = 2, main = " ", sub = " ")
title(main = "Density plots of t_18 and N(0,1)", sub = "normal Dist")
lines(density(norm_statistic), lwd = 2)
abline(v=qt(0.025, df = df), col = "blue")
abline(v=qt(0.975, df = df), col = "blue")
legend("topright",  legend=c("t_18", "normal(0,1)"),col=c( "red","black"), lty =1 ,cex = 0.5)
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
num.sim <- 1e5
n <- 10
df <- 3
deltavec <- c(0.5, 1 ,1.5)
tstat_norm <- tstat_chi <- tstat_exp <- tstat_unif <- tstat_t <- tstat_gamma <- tstat_weibull <- tstat_log <- matrix(NA, nrow = num.sim, ncol = length(deltavec))
set.seed(123)
for(i in 1:num.sim){
for (k in 1:length(deltavec)){
chisq_distn <- (rchisq(n, df) - df)/sqrt(2*df) + deltavec[k]
exp_distn <- (rexp(n) - 1) + deltavec[k]
unif_distn <- (runif(n, 0, 1) - 0.5)/sqrt(1/12) + deltavec[k]
t_distn <- (rt(n, df))/sqrt(df/(df-2)) + deltavec[k]
norm_dist<- rnorm(n) + deltavec[k]
gamma_dist <- ((rgamma(n, shape = 3, rate = 0.1) - 30)/sqrt(300)) + deltavec[k]
log_dist <- (rlnorm(n, meanlog = 0, sdlog = 1)- exp(0+1/2))/sqrt(sqrt((exp(1)-1)*exp(2*0 + 1))) + deltavec[k]
tstat_chi[i, k] <- sqrt(n)*mean(chisq_distn)/sd(chisq_distn)
tstat_norm[i, k] <- sqrt(n)*mean(norm_dist)/sd(norm_dist)
tstat_exp[i, k] <- sqrt(n)*mean(exp_distn)/sd(exp_distn)
tstat_t[i, k] <- sqrt(n)*mean(t_distn)/sd(t_distn)
tstat_unif[i, k] <- sqrt(n)*mean(unif_distn)/sd(unif_distn)
tstat_gamma[i, k] <- sqrt(n)*mean(gamma_dist)/sd(gamma_dist)
tstat_log[i, k] <- sqrt(n)*mean(log_dist)/sd(log_dist)
}
}
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
title(main = "Chi-Squared with 3 df")
for (k in 1:3){
lines(density(tstat_chi[, k]), col = "red", lty = k)
lines(density(tstat_norm[, k]), col = "blue", lty = k)
}
legend('topright', legend = c("chi-squared", "normal"), col=c("red", "blue") , lty =1 ,cex = 0.5)
plot(density(tstat_chi[,1]))
plot(density(tstat_chi[,1]), lty = 1)
plot(density(tstat_chi[,1]), lty = 0.5)
plot(density(tstat_chi[,1]), lty = 0.5)
plot(density(tstat_chi[,1]), lty = 1.5)
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
title(main = "lognormal(0, 1)")
lines(density(tstat_log[, 1]), col = "red", lty = 1)
lines(density(tstat_norm[, 1]), col = "blue", lty = 1)
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
title(main = "lognormal(0, 1)")
lines(density(tstat_log[, 1]), col = "red", lty = 0.5)
lines(density(tstat_norm[, 1]), col = "blue", lty = 0.5)
plot(density(tstat_chi[, 1]), typ = "n", xlim = c(-5, 10), ylim = c(0, 0.6), main = " ", xlab = " ")
title(main = "lognormal(0, 1)")
lines(density(tstat_log[, 1]), col = "red", lty = 1.5)
lines(density(tstat_norm[, 1]), col = "blue", lty = 1.5)
plot(tstat_chi[,1], col = 1)
plot(tstat_chi[,1], col = 1)
plot(density(tstat_chi[,1]), col = 1)
plot(density(tstat_chi[,1]), col = 2)
lines(density(tstat_chi[,2]), col = 3)
lines(density(tstat_chi[,3]), col = 4)
lines(density(tstat_norm[,3]), col = 4)
plot(density(tstat_chi[,1]), col = 1)
plot(density(tstat_norm[,1]), col = 1)
plot(density(tstat_chi[,1]), col = 1)
lines(density(tstat_norm[,1]), col = 4)
lines(density(tstat_chi[,2]), col = 2)
lines(density(tstat_norm[,2]), col = 4)
lines(density(tstat_chi[,3]), col = 2)
