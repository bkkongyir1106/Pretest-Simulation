method = 'exact.mc',
alternative = 'greater',
control = permControl(p.conf.level = 0.95, nmc = 10000, seed = 123)
)
pt
names(pt)
# Load library
library(perm)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
# Run test
pt[j] <- permTS(n1, n2,
method = 'exact.mc',
alternative = 'greater',
control = permControl(p.conf.level = 0.95, nmc = 10000, seed = 123)
)$p.value
}
power_ttest <- mean(powr_ttest)
return(pt)
}
pt
pt
str(pt)
# Load library
library(perm)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
}
power_ttest <- mean(powr_ttest)
}
distribution
power_ttest
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest[j] <- permutation.test(trt, values, 1e5)
}
power_ttest <- mean(powr_ttest)
}
ptest
set.seed(2021)
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
# Difference in means
original <- diff(tapply(values, trt, mean))
#Permutation test
permutation.test <- function(trt, values, n){
distribution=c()
result=0
for(i in 1:n){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, 1e5)
hist(ptest[[2]], breaks=5, col='grey', main="Permutation Distribution", las=1, xlab='')
abline(v=original, lwd=3, col="red")
ptest
ptest
# Load library
library(perm)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest[j] <- permutation.test(trt, values, 1e2)
}
power_ttest <- mean(powr_ttest)
}
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest[j] <- permutation.test(trt, values, 1e2)
}
power_ttest <- mean(powr_ttest)
}
warning()
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest[j] <- permutation.test(trt, values, R)
}
power_ttest <- mean(powr_ttest)
}
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
#ptest[j] <- permutation.test(trt, values, R)
}
power_ttest <- mean(powr_ttest)
}
power_ttest
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
}
power_ttest <- mean(powr_ttest)
}
ptest
ptest[[1]]
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
}
power_ttest <- mean(powr_ttest)
}
ptest[[1]]
power_ttest
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
}
power_ttest <- mean(powr_ttest)
}
ptest[[1]]
set.seed(2024)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
}
power_ttest <- mean(powr_ttest)
}
ptest[[1]]
set.seed(2024)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
pval[j] <- ptest[[1]]
}
power_ttest <- mean(powr_ttest)
}
set.seed(2024)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
pval = numeric(N)
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
pval[j] <- ptest[[1]]
}
power_ttest <- mean(powr_ttest)
}
set.seed(2024)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
pval = numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
pval[j] <- ptest[[1]]
}
power_ttest <- mean(powr_ttest)
}
pval
set.seed(2024)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
}
power_ttest <- mean(powr_ttest)
}
power_ttest
#PERM TEST
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
pval <- ptest[[1]]
pval
set.seed(2024)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
n.vec = c(5, 10, 20, 30)
for(k in 1 : length(n.vec)){
n = n.vec[k]
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
}
power_ttest <- mean(powr_ttest)
}
#PERM TEST
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
pval <- ptest[[1]]
}
pval
set.seed(2024)
N = 1e2;  d = 0.5;  n = 10;  alpha = 0.05; R=1e3
n.vec = c(5, 10, 20, 30)
for(k in 1 : length(n.vec)){
n = n.vec[k]
powr_ttest <- numeric(N)
for(j in 1 : N){
# normal distn
n1 <- rnorm(n, mean = 0, sd = 1)
n2 <- rnorm(n, mean = 0, sd = 1)
if(t.test(n1, n2 + d)$p.value <= alpha){
powr_ttest[j] <- 1
}
power_ttest[k] <- mean(powr_ttest)
}
#PERM TEST
original <- diff(tapply(values, trt, mean))
d.frame <- as.data.frame(cbind(c(n1, n2), c(rep(1, length(n1)), rep(0, length(n2)))))
trt <- d.frame$V2
values <- d.frame$V1
#Permutation test
permutation.test <- function(trt, values, R){
distribution=c()
result=0
for(i in 1:R){
distribution[i]=diff(by(values, sample(trt, length(trt), FALSE), mean))
}
result=sum(abs(distribution) >= abs(original))/(R)
return(list(result, distribution))
}
ptest <- permutation.test(trt, values, R)
pval[k] <- ptest[[1]]
}
power_ttest
pval
