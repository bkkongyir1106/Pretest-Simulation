fun <- dnorm(x2, mean = mean(x), sd = sd(x))
# Histogram
hist(x, prob = TRUE, col = "white",
ylim = c(0, max(fun)),
main = "Histogram with normal curve")
lines(x2, fun, col = 2, lwd = 2)
x2
fun
# Histogram
hist(x, prob = TRUE, col = "white",
ylim = c(0, max(fun)),
main = "Histogram with normal curve")
lines(x2, fun, col = 2, lwd = 2)
# Sample data
set.seed(3)
x <- rnorm(200)
# Histogram
hist(x, prob = TRUE)
# X-axis grid
x2 <- seq(min(x), max(x), length = 40)
# Normal curve
fun <- dnorm(x2, mean = mean(x), sd = sd(x))
# Histogram
hist(x, prob = TRUE, col = "white",
ylim = c(0, max(fun)),
main = "Histogram with normal curve")
lines(x2, fun, col = 2, lwd = 2)
knitr::opts_chunk$set(echo = TRUE)
x2 <- seq(min(e_stat), max(e_stat), length = 40)
x2
fun
x2 <- seq(min(e_stat), max(e_stat), length = 40)
# Normal curve
fun <- rt(x2,df = 3)
# Histogram
hist(e_stat, prob = TRUE, col = "white",
ylim = c(0, max(fun)),
main = "Histogram with normal curve")
lines(x2, fun, col = 2, lwd = 2)
x2 <- seq(min(e_stat), max(e_stat), length = 40)
# Normal curve
fun <- rt(x2,df = 3)
# Histogram
hist(e_stat, prob = TRUE, col = "white",
ylim = c(0, max(fun)),prob = T,
main = "Histogram with normal curve")
x2 <- seq(min(e_stat), max(e_stat), length = 40)
# Normal curve
fun <- rt(x2,df = 3)
# Histogram
hist(e_stat, prob = TRUE, col = "white",
ylim = c(0, max(fun)), prob = T,
main = "Histogram with normal curve")
x2 <- seq(min(e_stat), max(e_stat), length = 40)
# Normal curve
fun <- rt(x2,df = 3)
# Histogram
hist(e_stat, prob = TRUE, col = "white",
ylim = c(0, max(fun)),
main = "Histogram with normal curve")
lines(x2, fun, col = 2, lwd = 2)
fun <- dnorm(e_stat)
funt <- dt(e_stat, 3)
x2 <- seq(min(e_stat), max(e_stat), length = 40)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
fun
funt
fun <- dnorm(e_stat)
funt <- dt(e_stat, 3)
x2 <- seq(min(e_stat), max(e_stat), length = length(e_stat))
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=199)"),
fill=c("blue","red" )
)
fun <- dnorm(e_stat)
funt <- dt(e_stat, 3)
x2 <- seq(min(e_stat), max(e_stat), length =4 )
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
fun <- dnorm(e_stat)
funt <- dt(e_stat, 3)
x2 <- seq(min(e_stat), max(e_stat), length =100 )
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=199)"),
fill=c("blue","red" )
)
hist(e_stat)
hist(e_stat)
lines(dt(e_stat, df = 3))
hist(e_stat)
lines(dt(e_stat), df = 3))
hist(e_stat)
lines(dt(e_stat), df = 3)
hist(e_stat)
lines(dt(e_stat, df = 3))
dt(e_stat, df = 3)
par(mfrow = c(2, 2))
hist(e_stat, prob = TRUE, col = "white",
main = "Histogram with normal curve")
lines(density(e_stat), col = "red")
hist(e_stat2, prob = TRUE, col = "white",
main = "Histogram with normal curve")
lines(density(e_stat2), col = "blue")
hist(ln_stat, prob = TRUE, col = "white",
main = "Histogram with normal curve")
lines(density(ln_stat), col = "green")
hist(ln_stat2, prob = TRUE, col = "white",
main = "Histogram with normal curve")
lines(density(ln_stat2), col = "purple")
hist(ln_stat2, prob = TRUE, col = "white",
main = "Histogram with normal curve")
hist(ln_stat2, prob = TRUE, col = "white",
main = "Histogram with normal curve")
# X-axis grid
set.seed(100)
x <- rt(200, 199)
fun <- dnorm(x2, mean = mean(x), sd = sd(x))
funt <- dt(x2, 1999)
x2 <- seq(min(x), max(x), length = 40)
# Histogram
hist(x, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
#abline(v=mean(x),col="blue",lwd=4, lty=2)
#abline(v=0,col="red",lwd=4, lty=3)
legend("topleft",
c("N(0,1)","t(df=199)"),
fill=c("blue","red" )
)
# X-axis grid
set.seed(100)
x <- rt(200, 199)
x2 <- seq(min(x), max(x), length = 40)
fun <- dnorm(x2, mean = mean(x), sd = sd(x))
funt <- dt(x2, 1999)
# Histogram
hist(x, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
#abline(v=mean(x),col="blue",lwd=4, lty=2)
#abline(v=0,col="red",lwd=4, lty=3)
legend("topleft",
c("N(0,1)","t(df=199)"),
fill=c("blue","red" )
)
x2
xt <- rt(n, 5)
fun <- dnorm(n)
funt <- dt(n, df = 3)
x2 <- seq(min(xt), max(xt), length =n )
hist(e_stat)
lines(dt(e_stat, df = 3))
x2 <- seq(min(xt), max(xt), length =n )
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(, fun, col = "blue", lwd = 3)
xt <- rt(n, 5)
fun <- dnorm(n)
funt <- dt(n, df = 3)
x2 <- seq(min(xt), max(xt), length =n )
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
x2
xt <- rt(n, 5)
fun <- dnorm(n)
funt <- dt(n, df = 3)
x2 <- seq(min(xt), max(xt), length =n )
xt
fun
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(n)
fun
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
fun
funt <- dt(n, df = 3)
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
# X-axis grid
set.seed(100)
x <- rt(200, 199)
x2 <- seq(min(x), max(x), length = 40)
fun <- dnorm(x2, mean = mean(x), sd = sd(x))
funt <- dt(x2, 1999)
# Histogram
hist(x, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
fun
funt
x2
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(n, df = 3)
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
prob
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=199)"),
fill=c("blue","red" )
)
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(n, df = 3)
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(xt, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=199)"),
fill=c("blue","red" )
)
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=199)"),
fill=c("blue","red" )
)
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of 200 data with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)),
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic"
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
par(mfrow = c(2, 2))
#exponential
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
# uniform
hist(u_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
par(mfrow = c(2, 2))
#exponential
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
# uniform
hist(u_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
par(mfrow = c(2, 2))
#exponential
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
# uniform
hist(t_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
par(mfrow = c(2, 2))
#exponential
xt <- rt(n, df = 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 5)
hist(t_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
#uniform
xe <- rexp(n, rate = 1)
x2 <- seq(min(xe), max(xe), length =n )
fun2 <- dnorm(x2)
funt2 <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun2, col = "blue", lwd = 3)
lines(x2, funt2, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
par(mfrow = c(2, 2))
#exponential
xt <- rt(n, df = 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 5)
hist(t_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
par(mfrow = c(2, 2))
#exponential
xt <- rt(n, 5)
x2 <- seq(min(xt), max(xt), length =n )
fun <- dnorm(x2)
funt <- dt(x2, df = 3)
hist(e_stat, prob = TRUE,
ylim = c(0, max(fun)), xlab= "test statistic",
main = "Histogram of t test statistics with overlaying normal curve, t-curve ")
lines(x2, fun, col = "blue", lwd = 3)
lines(x2, funt, col = "red", lwd = 3, lty=2)
legend("topleft",
c("N(0,1)","t(df=5)"),
fill=c("blue","red" )
)
load("D:/Research_Fall2023/Pretest-Simulation/Power and Type I error Rate/Rmarkdown/two_samples_plots.RData")
load("D:/Research_Fall2023/Pretest-Simulation/Power and Type I error Rate/Rmarkdown/two_samples test statistic plots.RData")
load("D:/Research_Fall2023/Pretest-Simulation/Power and Type I error Rate/Rmarkdown/two_samples_results.RData")
load("D:/Research_Fall2023/Pretest-Simulation/Power and Type I error Rate/Rmarkdown/.RData")
## add extra space to right margin of plot within frame
par(mar=c(5, 4, 4, 6) + 0.1)
## Plot first set of data and draw its axis
plot(sample_size, Power_SW_logn, pch=16, axes=FALSE, ylim=c(0,1), xlab="", ylab="",
type="b",col="black", main="Utility of Shapiro Wilk test")
axis(2, ylim=c(0,1),col="black",las=1)  ## las=1 makes horizontal labels
mtext("Power of SW test",side=2,line=2.5)
box()
## Allow a second plot on the same graph
par(new=TRUE)
## Plot the second plot and put axis scale on right
plot(sample_size, powrloss_logn, pch=15,  xlab="", ylab="", ylim=c(0,0.5),
axes=FALSE, type="b", col="red")
mtext("Power loss of t test",side=4,col="red",line=4)
axis(4, ylim=c(0,0.5), col="red",col.axis="red",las=1)
lines(sample_size, InflationType1Error_logn, pch=11,  xlab="", ylab="", ylim=c(0,0.5),
type="b", col="blue")
## a little farther out (line=4) to make room for labels
axis(4, ylim=c(0,0.5), col="red",col.axis="red",las=1)
## Draw the time axis
axis(1,pretty(range(sample_size),10))
mtext("Sample Size",side=1,col="black",line=2.5)
## Add Legend
legend("right",legend=c("Power of SW test","Power loss of t test", "Inflation of Type I error"),
text.col=c("black","red", "blue"),pch=c(16,15, 11),col=c("black","red", "blue"))
# power of SW test
data1 <-c(Power_SW_exp, Power_SW_unif, Power_SW_t,Power_SW_chisq,Power_SW_gamma, Power_SW_t,Power_SW_weibull,Power_SW_logn, Power_SW_contaminate)
Power_SW_test<-array(data1, dim = c(6, 8), dimnames = list(sample_size,c("exp", "unif", "t", "chisq", "gamma", "weibull", "lognormal", "contaminate")))
Power_SW_test
# power of SW test
data1 <-c(Power_SW_exp, Power_SW_unif, Power_SW_t,Power_SW_chisq,Power_SW_gamma, Power_SW_t,Power_SW_weibull,Power_SW_logn, Power_SW_contaminate)
Power_SW_test<-array(data1, dim = c(6, 8), dimnames = list(sample_size,c("exp", "unif", "t", "chisq", "gamma", "weibull", "lognormal", "contaminate")))
Power_SW_test
# Type I error
data2 <-c(Type1Error_Norm, Type1Error_exp, Type1Error_unif, Type1Error_t, Type1Error_chisq, Type1Error_gamma , Type1Error_weibull,Type1Error_logn, Type1Error_contaminate)
Type1_error<-array(data2, dim = c(6, 9), dimnames = list(sample_size,c("norm", "exp", "unif", "t", "chisq", "gamma", "weibull", "lognormal", "contaminate")))
Type1_error
#inflation of Type I error
data5 <-c(InflationType1Error_exp, InflationType1Error_unif, InflationType1Error_t, InflationType1Error_chisq, InflationType1Error_gamma, InflationType1Error_weibull, InflationType1Error_logn, InflationType1Error_contaminate)
inflation_error<-array(data5, dim = c(6, 8), dimnames = list(sample_size,c("exp", "unif", "t", "chisq", "gamma", "weibull", "lognormal", "contaminate")))
inflation_error
setwd("D:/Research_Fall2023/Pretest-Simulation/Power and Type I error Rate/Results")
rm(list = ls())
setwd("D:/Research_Fall2023/Pretest-Simulation/Power and Type I error Rate/Results")
set.seed(1)
N <- 100000
alpha <- 0.05
d <- 0.5
sample_size <- c(10,20,30,40,50,60)
